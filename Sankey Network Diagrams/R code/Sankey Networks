setwd('C:\\Users\\lizhvania\\Desktop\\thesis_temp\\SankeyNetwork')

# Libraries 
library(tidyverse)
library(ggalluvial)
library(networkD3)
library(htmlwidgets)
library(htmltools)

# Tallinn - Narva

# Import data

narva_clust <- read_csv('NarvaClust.csv')


# CREATE SANKEY NETWORKS


# Create a node data frame: it lists every entities involved in the flow
nodes_1 <- data.frame(name=c(as.character(narva_clust$source), as.character(narva_clust$target)) %>% unique())


# With networkD3, connection must be provided using id, not using real name like in the links dataframe. So we need to reformat it.
narva_clust$IDsource=match(narva_clust$source, nodes_1$name)-1 
narva_clust$IDtarget=match(narva_clust$target, nodes_1$name)-1



# Assign groups to the nodes
nodes_1$group <- as.factor(c('Lasnamäe (Source)', 'Kesklinna (Source)', 'Kristiine (Source)', 'Mustamäe (Source)', 
                             'Haabersti (Source)', 'Põhja-Tallinna (Source)', 'Nõmme (Source)', 'Pirita (Source)', 
                             
                             'Lasnamäe (Target)', 'Kesklinna (Target)', 'Kristiine (Target)', 'Mustamäe (Target)',
                             'Haabersti (Target)', 'Põhja-Tallinna (Target)', 'Nõmme (Target)', 'Pirita (Target)'))



# Give a color for each group of land type:
my_colors <- 'd3.scaleOrdinal() .domain(["Lasnamäe (Source)", "Kesklinna (Source)", "Kristiine (Source)", "Mustamäe (Source)", 
                                           "Haabersti (Source)", "Põhja-Tallinna (Source)", "Nõmme (Source)", "Pirita (Source)", 
                             
                                          "Lasnamäe (Target)", "Kesklinna (Target)", "Kristiine (Target)", "Mustamäe (Target)",
                                          "Haabersti (Target)", "Põhja-Tallinna (Target)", "Nõmme (Target)", "Pirita (Target)"]) .range([
                                          "#81A88D", "#F4B5BD", "#FAD77B", "#7294D4", "#972D15", "#A2A475", "#C6CDF7", "#FAD510", 
                                          "#81A88D", "#F4B5BD", "#FAD77B", "#7294D4", "#972D15", "#A2A475", "#C6CDF7", "#FAD510"])'


sankey <- sankeyNetwork(Links = narva_clust, 
                        Nodes = nodes_1,
                        Source = "IDsource", 
                        Target = "IDtarget",
                        Value = "value", 
                        NodeID = "name", 
                        colourScale=my_colors, 
                        fontSize=12, 
                        fontFamily = "Georgia", 
                        nodeWidth=50, 
                        nodePadding=15, 
                        
                        margin = 225,  
                        
                        height=600, 
                        width=1500, 
                        iterations = 0, 
                        sinksRight=FALSE, 
                        
                        #LinkGroup = 'target', 
                        NodeGroup="group"
)

sankey <- htmlwidgets::prependContent(sankey, htmltools::tags$h1(style = "text-align: center; font-family: Georgia; color:#737373; 
                                                                 font-size: 120%; padding: 0px;", 
                                                                 "Calling activity based on Origin and Destination of call pairs by districts of Tallinn"))

sankey <- htmlwidgets::prependContent(sankey, htmltools::tags$h2(style = "text-align: center; font-family: Georgia; color:#737373; 
                                                                 font-size: 100%; padding: 0px;", 
                                                                 "Users that have call partners in Narva"))

sankey_rendered <- htmlwidgets::onRender(sankey, 
                                         'function(el, x) {
                                         
                                         // round the values to two decimal places for links
                                         var link = d3.selectAll(".link");
                                         var format = d3.formatLocale({"decimal": ".", "thousands": ",", "grouping": [3], "currency": ["", "\u00a0€"]}).format(",.2f");
                                      
                                         link.select("title").select("body")
                                            .html(function(d) { return "<pre>" + d.source.name + " \u2192 " + d.target.name +
                                                  "\\n" + format(d.value) + " %" + "<pre>"; });
                                                  
                                         
                                         // round the values to two decimal places for nodes
                                         var node = d3.selectAll(".node")
                                         var format = d3.formatLocale({"decimal": ".", "thousands": ",", "grouping": [3], "currency": ["", "\u00a0€"]}).format(",.2f");
                                         
                                         node.select("title").select("body")
                                            .html(function(d) { return "<pre>" + d.name + " \u2192 " + 
                                                  "\\n" + format(d.value) + " %" + "<pre>"; });
                                         
                                         
                                         
                                         d3.selectAll(".node text")
                                           .filter(function(d, i) { return i < 8})   //to select only regions (the first 11 elements from nodes)
                                           
                                           .attr("x", -8)
                                           .attr("text-anchor", "end")
                                           .style("font-family", "Georgia")
                                           .style("fill",  "#969696");
                                         
                                         d3.selectAll(".node text")
                                           .filter(function(d, i) { return i > 7})   //to select only types (the last 3 elements from nodes)
                                           
                                           .style("font-family", "Georgia")
                                           .style("fill",  "#969696");
                                         
                                         
                                         
                                         }')


sankey_rendered

# Save the html file
saveNetwork(sankey_rendered, "Narva cluster.html")

# Save the html as statis image
webshot::webshot("Narva cluster.html", "Narva cluster.png", vwidth = 400, vheight = 400)



# Tallinn - Tartu

# Import data

tartu_clust <- read_csv('TartuClust.csv')


# CREATE SANKEY NETWORKS


# Create a node data frame: it lists every entities involved in the flow
nodes_1 <- data.frame(name=c(as.character(tartu_clust$source), as.character(tartu_clust$target)) %>% unique())


# With networkD3, connection must be provided using id, not using real name like in the links dataframe. So we need to reformat it.
tartu_clust$IDsource=match(tartu_clust$source, nodes_1$name)-1 
tartu_clust$IDtarget=match(tartu_clust$target, nodes_1$name)-1



# Assign groups to the nodes
nodes_1$group <- as.factor(c('Lasnamäe (Source)', 'Kesklinna (Source)', 'Kristiine (Source)', 'Mustamäe (Source)', 
                             'Haabersti (Source)', 'Põhja-Tallinna (Source)', 'Nõmme (Source)', 'Pirita (Source)', 
                             
                             'Lasnamäe (Target)', 'Kesklinna (Target)', 'Kristiine (Target)', 'Mustamäe (Target)',
                             'Haabersti (Target)', 'Põhja-Tallinna (Target)', 'Nõmme (Target)', 'Pirita (Target)'))



# Give a color for each group of land type:
my_colors <- 'd3.scaleOrdinal() .domain(["Lasnamäe (Source)", "Kesklinna (Source)", "Kristiine (Source)", "Mustamäe (Source)", 
                                           "Haabersti (Source)", "Põhja-Tallinna (Source)", "Nõmme (Source)", "Pirita (Source)", 
                             
                                          "Lasnamäe (Target)", "Kesklinna (Target)", "Kristiine (Target)", "Mustamäe (Target)",
                                          "Haabersti (Target)", "Põhja-Tallinna (Target)", "Nõmme (Target)", "Pirita (Target)"]) .range([
                                          "#81A88D", "#F4B5BD", "#FAD77B", "#7294D4", "#972D15", "#A2A475", "#C6CDF7", "#FAD510", 
                                          "#81A88D", "#F4B5BD", "#FAD77B", "#7294D4", "#972D15", "#A2A475", "#C6CDF7", "#FAD510"])'


sankey <- sankeyNetwork(Links = tartu_clust, 
                        Nodes = nodes_1,
                        Source = "IDsource", 
                        Target = "IDtarget",
                        Value = "value", 
                        NodeID = "name", 
                        colourScale=my_colors, 
                        fontSize=12, 
                        fontFamily = "Georgia", 
                        nodeWidth=50, 
                        nodePadding=15, 
                        
                        margin = 225,  
                        
                        height=600, 
                        width=1500, 
                        iterations = 0, 
                        sinksRight=FALSE, 
                        
                        #LinkGroup = 'target', 
                        NodeGroup="group"
)

sankey <- htmlwidgets::prependContent(sankey, htmltools::tags$h1(style = "text-align: center; font-family: Georgia; color:#737373; 
                                                                 font-size: 120%; padding: 0px;", 
                                                                 "Calling activity based on Origin and Destination of call pairs by districts of Tallinn"))

sankey <- htmlwidgets::prependContent(sankey, htmltools::tags$h2(style = "text-align: center; font-family: Georgia; color:#737373; 
                                                                 font-size: 100%; padding: 0px;", 
                                                                 "Users that have call partners in Tartu"))

sankey_rendered <- htmlwidgets::onRender(sankey, 
                                         'function(el, x) {
                                         
                                         // round the values to two decimal places for links
                                         var link = d3.selectAll(".link");
                                         var format = d3.formatLocale({"decimal": ".", "thousands": ",", "grouping": [3], "currency": ["", "\u00a0€"]}).format(",.2f");
                                      
                                         link.select("title").select("body")
                                            .html(function(d) { return "<pre>" + d.source.name + " \u2192 " + d.target.name +
                                                  "\\n" + format(d.value) + " %" + "<pre>"; });
                                                  
                                         
                                         // round the values to two decimal places for nodes
                                         var node = d3.selectAll(".node")
                                         var format = d3.formatLocale({"decimal": ".", "thousands": ",", "grouping": [3], "currency": ["", "\u00a0€"]}).format(",.2f");
                                         
                                         node.select("title").select("body")
                                            .html(function(d) { return "<pre>" + d.name + " \u2192 " + 
                                                  "\\n" + format(d.value) + " %" + "<pre>"; });
                                         
                                         
                                         
                                         d3.selectAll(".node text")
                                           .filter(function(d, i) { return i < 8})   //to select only regions (the first 11 elements from nodes)
                                           
                                           .attr("x", -8)
                                           .attr("text-anchor", "end")
                                           .style("font-family", "Georgia")
                                           .style("fill",  "#969696");
                                         
                                         d3.selectAll(".node text")
                                           .filter(function(d, i) { return i > 7})   //to select only types (the last 3 elements from nodes)
                                           
                                           .style("font-family", "Georgia")
                                           .style("fill",  "#969696");
                                         
                                         
                                         
                                         }')


sankey_rendered

# Save the html file
saveNetwork(sankey_rendered, "Tartu cluster.html")

# Save the html as statis image
webshot::webshot("Tartu cluster.html", "Tartu cluster.png", vwidth = 400, vheight = 400)







# Tallinn - Parnu

# Import data

parnu_clust <- read_csv('ParnuClust.csv')


# CREATE SANKEY NETWORKS


# Create a node data frame: it lists every entities involved in the flow
nodes_1 <- data.frame(name=c(as.character(parnu_clust$source), as.character(parnu_clust$target)) %>% unique())


# With networkD3, connection must be provided using id, not using real name like in the links dataframe. So we need to reformat it.
parnu_clust$IDsource=match(parnu_clust$source, nodes_1$name)-1 
parnu_clust$IDtarget=match(parnu_clust$target, nodes_1$name)-1



# Assign groups to the nodes
nodes_1$group <- as.factor(c('Lasnamäe (Source)', 'Kesklinna (Source)', 'Kristiine (Source)', 'Mustamäe (Source)', 
                             'Haabersti (Source)', 'Põhja-Tallinna (Source)', 'Nõmme (Source)', 'Pirita (Source)', 
                             
                             'Lasnamäe (Target)', 'Kesklinna (Target)', 'Kristiine (Target)', 'Mustamäe (Target)',
                             'Haabersti (Target)', 'Põhja-Tallinna (Target)', 'Nõmme (Target)', 'Pirita (Target)'))



# Give a color for each group of land type:
my_colors <- 'd3.scaleOrdinal() .domain(["Lasnamäe (Source)", "Kesklinna (Source)", "Kristiine (Source)", "Mustamäe (Source)", 
                                           "Haabersti (Source)", "Põhja-Tallinna (Source)", "Nõmme (Source)", "Pirita (Source)", 
                             
                                          "Lasnamäe (Target)", "Kesklinna (Target)", "Kristiine (Target)", "Mustamäe (Target)",
                                          "Haabersti (Target)", "Põhja-Tallinna (Target)", "Nõmme (Target)", "Pirita (Target)"]) .range([
                                          "#81A88D", "#F4B5BD", "#FAD77B", "#7294D4", "#972D15", "#A2A475", "#C6CDF7", "#FAD510", 
                                          "#81A88D", "#F4B5BD", "#FAD77B", "#7294D4", "#972D15", "#A2A475", "#C6CDF7", "#FAD510"])'


sankey <- sankeyNetwork(Links = parnu_clust, 
                        Nodes = nodes_1,
                        Source = "IDsource", 
                        Target = "IDtarget",
                        Value = "value", 
                        NodeID = "name", 
                        colourScale=my_colors, 
                        fontSize=12, 
                        fontFamily = "Georgia", 
                        nodeWidth=50, 
                        nodePadding=15, 
                        
                        margin = 225,  
                        
                        height=600, 
                        width=1500, 
                        iterations = 0, 
                        sinksRight=FALSE, 
                        
                        #LinkGroup = 'target', 
                        NodeGroup="group"
)

sankey <- htmlwidgets::prependContent(sankey, htmltools::tags$h1(style = "text-align: center; font-family: Georgia; color:#737373; 
                                                                 font-size: 120%; padding: 0px;", 
                                                                 "Calling activity based on Origin and Destination of call pairs by districts of Tallinn"))

sankey <- htmlwidgets::prependContent(sankey, htmltools::tags$h2(style = "text-align: center; font-family: Georgia; color:#737373; 
                                                                 font-size: 100%; padding: 0px;", 
                                                                 "Users that have call partners in Pärnu"))

sankey_rendered <- htmlwidgets::onRender(sankey, 
                                         'function(el, x) {
                                         
                                         // round the values to two decimal places for links
                                         var link = d3.selectAll(".link");
                                         var format = d3.formatLocale({"decimal": ".", "thousands": ",", "grouping": [3], "currency": ["", "\u00a0€"]}).format(",.2f");
                                      
                                         link.select("title").select("body")
                                            .html(function(d) { return "<pre>" + d.source.name + " \u2192 " + d.target.name +
                                                  "\\n" + format(d.value) + " %" + "<pre>"; });
                                                  
                                         
                                         // round the values to two decimal places for nodes
                                         var node = d3.selectAll(".node")
                                         var format = d3.formatLocale({"decimal": ".", "thousands": ",", "grouping": [3], "currency": ["", "\u00a0€"]}).format(",.2f");
                                         
                                         node.select("title").select("body")
                                            .html(function(d) { return "<pre>" + d.name + " \u2192 " + 
                                                  "\\n" + format(d.value) + " %" + "<pre>"; });
                                         
                                         
                                         
                                         d3.selectAll(".node text")
                                           .filter(function(d, i) { return i < 8})   //to select only regions (the first 11 elements from nodes)
                                           
                                           .attr("x", -8)
                                           .attr("text-anchor", "end")
                                           .style("font-family", "Georgia")
                                           .style("fill",  "#969696");
                                         
                                         d3.selectAll(".node text")
                                           .filter(function(d, i) { return i > 7})   //to select only types (the last 3 elements from nodes)
                                           
                                           .style("font-family", "Georgia")
                                           .style("fill",  "#969696");
                                         
                                         
                                         
                                         }')


sankey_rendered

# Save the html file
saveNetwork(sankey_rendered, "Parnu cluster.html")

# Save the html as statis image
webshot::webshot("Parnu cluster.html", "Parnu cluster.png", vwidth = 400, vheight = 400)


